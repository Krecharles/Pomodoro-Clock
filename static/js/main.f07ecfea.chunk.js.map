{"version":3,"sources":["assets/sound1.mp3","assets/sound2.mp3","components/Components.jsx","formatter.js","components/Clock.jsx","components/TimeDisplayer.jsx","components/ActiveHandler.jsx","components/DurationPicker.jsx","components/Timer.jsx","components/MainPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","MyButton","props","className","children","formatTime","seconds","mins","Math","floor","secs","length","Clock","useState","time","setTime","update","d","Date","getHours","getMinutes","useEffect","setInterval","TimeDisplayer","passedSeconds","totalSeconds","style","width","MouseActiveContext","React","createContext","ActiveHandler","mouseActive","setMouseActive","onMouseMove","e","timeout","preventDefault","clearTimeout","setTimeout","Provider","value","DurationPicker","setTimerDuration","setValue","placeholder","onChange","newValue","target","parsed","parseInt","isNaN","s1","UIfx","sound1","s2","sound2","Timer","state","duration","timerActive","getTimerState","setState","includes","play","startTimer","pauseTimer","resetTimer","this","timerState","document","title","context","getElementById","cursor","temp","onClick","Component","contextType","MainPage","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f07ecfea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sound1.812c7504.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sound2.04054870.mp3\";","import React from \"react\";\n\nexport const MyButton = (props) => (\n  <button\n    className=\"bg-green-700 mx-8 my-4 w-40 py-3 shadow-md rounded-md border-b-2 border-green-400 hover:border-green-500 space-y-1 text-3xl text-green-400 hover:text-green-500 focus:outline-none select-none text-center transition duration-300\"\n    {...props}\n  >\n    {props.children}\n  </button>\n);\n","export const formatTime = (seconds) => {\n  let mins = Math.floor(seconds / 60) + \"\";\n  let secs = (seconds % 60) + \"\";\n  if (secs.length === 1) secs = \"0\" + secs;\n  return mins + \":\" + secs;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { formatTime } from \"../formatter\";\n\nexport const Clock = ({ className }) => {\n  const [time, setTime] = useState();\n  let update = () => {\n    let d = new Date();\n    setTime(formatTime(d.getHours() * 60 + d.getMinutes()));\n  };\n  useEffect(() => {\n    update();\n    setInterval(update, 1000);\n  }, []);\n  return <h1 className={\"text-6xl text-green-700 \" + className}>{time}</h1>;\n};\n","import React from \"react\";\nimport { formatTime } from \"../formatter\";\nimport { Clock } from \"./Clock\";\n\nexport const TimeDisplayer = ({ passedSeconds, totalSeconds }) => {\n  return (\n    <div className=\"w-2/3 my-16 lg:my-32 mx-auto\">\n      <div className=\"flex w-full justify-center md:justify-between items-end\">\n        <h1 className=\"big-text text-green-900\">{formatTime(passedSeconds)}</h1>\n        <Clock className=\"hidden md:block\"></Clock>\n      </div>\n      <div className=\"w-full h-px bg-green-800\"></div>\n      <div className=\"w-full h-px bg-green-800\"></div>\n      <div\n        className=\"h-2 bg-green-700\"\n        style={{ width: (1 - passedSeconds / totalSeconds) * 100 + \"%\" }}\n      ></div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\n\nexport const MouseActiveContext = React.createContext(true);\n\nexport const ActiveHandler = ({ children }) => {\n  const [mouseActive, setMouseActive] = useState(true);\n\n  let setMouseMove = (e) => {\n    e.preventDefault();\n    setMouseActive(true);\n\n    let timeout;\n    (() => {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => setMouseActive(false), 5000);\n    })();\n  };\n\n  return (\n    <div className=\"w-full\" onMouseMove={setMouseMove}>\n      <MouseActiveContext.Provider value={mouseActive}>\n        {children}\n      </MouseActiveContext.Provider>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\n\nexport const DurationPicker = ({ setTimerDuration }) => {\n  const [value, setValue] = useState();\n  const handleChange = (e) => {\n    const newValue = e.target.value;\n    setValue(newValue);\n    e.preventDefault();\n\n    if (newValue === \"\") setTimerDuration(25 * 60);\n    const parsed = parseInt(newValue);\n    if (isNaN(parsed) || parsed === 0) return;\n    setTimerDuration(parsed * 60);\n  };\n  return (\n    <input\n      className=\"appearance-none my-4 placeholder-green-400 shadow bg-green-700 mx-8 w-40 py-3 rounded-md text-3xl text-green-400 focus:outline-none select-none text-center\"\n      placeholder=\"Custom\"\n      value={value}\n      onChange={handleChange}\n    ></input>\n  );\n};\n","import React, { Component } from \"react\";\nimport UIfx from \"uifx\";\nimport sound1 from \"../assets/sound1.mp3\";\nimport sound2 from \"../assets/sound2.mp3\";\nimport { MyButton } from \"./Components\";\nimport { formatTime } from \"../formatter\";\nimport { TimeDisplayer } from \"./TimeDisplayer\";\nimport { MouseActiveContext } from \"./ActiveHandler\";\nimport { DurationPicker } from \"./DurationPicker\";\n\nconst s1 = new UIfx(sound1);\nconst s2 = new UIfx(sound2);\n\nexport class Timer extends Component {\n  state = {\n    duration: 25 * 60,\n    seconds: 25 * 60,\n    timerActive: false,\n  };\n\n  static contextType = MouseActiveContext;\n\n  componentDidMount() {\n    this.update();\n    setInterval(this.update, 1000);\n    this.resetTimer();\n  }\n\n  // returns \"Creating\", \"Paused\", \"Finished\", \"Going\"\n  getTimerState = () => {\n    let { duration, seconds, timerActive } = this.state;\n    if (seconds === duration && !timerActive) return \"Creating\";\n    if (seconds === 0) return \"Finished\";\n    if (!timerActive) return \"Paused\";\n    return \"Going\";\n  };\n\n  update = () => {\n    if (this.state.timerActive && this.state.seconds > 0) {\n      this.setState({ seconds: this.state.seconds - 1 });\n      if ([1, 2, 3].includes(this.state.seconds)) s1.play(); // 1s delay\n      if (this.state.seconds === 0) s2.play();\n    }\n  };\n\n  startTimer = () => this.setState({ timerActive: true });\n\n  pauseTimer = () => this.setState({ timerActive: false });\n\n  resetTimer = () =>\n    this.setState({ timerActive: false, seconds: this.state.duration });\n\n  setTimerDuration = (duration) =>\n    this.setState({ duration, seconds: duration, timerActive: false });\n\n  render() {\n    let { seconds, duration } = this.state;\n    let timerState = this.getTimerState();\n    document.title = \"Pomodoro - \" + formatTime(seconds);\n\n    if (!this.context && timerState === \"Going\")\n      document.getElementById(\"root\").style.cursor = \"none\";\n    else document.getElementById(\"root\").style.cursor = \"auto\";\n\n    const temp = [\"Creating\", \"Finished\"].includes(timerState)\n      ? \"visible\"\n      : \"invisible\";\n\n    return (\n      <div className=\"w-full\">\n        {/* <div className=\"flex justify-center h-20 items-center\"> */}\n        <div\n          className={\n            \"flex flex-col items-center md:flex-row justify-center \" + temp\n          }\n        >\n          <MyButton onClick={() => this.setTimerDuration(25 * 60)}>\n            25:00\n          </MyButton>\n          <MyButton onClick={() => this.setTimerDuration(5 * 60)}>\n            5:00\n          </MyButton>\n          <DurationPicker setTimerDuration={this.setTimerDuration} />\n        </div>\n\n        <TimeDisplayer passedSeconds={seconds} totalSeconds={duration} />\n\n        <div className=\"flex justify-center items-center\">\n          {[\"Creating\"].includes(timerState) && (\n            <MyButton\n              onClick={() => {\n                this.resetTimer();\n                this.startTimer();\n              }}\n            >\n              Start\n            </MyButton>\n          )}\n          {timerState === \"Going\" && (\n            <div\n              className={\n                \"transition duration-1000 \" +\n                (this.context ? \"\" : \"opacity-0 hover:opacity-100\")\n              }\n            >\n              <MyButton onClick={this.pauseTimer}>Pause</MyButton>\n            </div>\n          )}\n          {timerState === \"Paused\" && (\n            <div className=\"flex flex-col sm:flex-row justify-center\">\n              <MyButton onClick={this.startTimer}>Continue</MyButton>\n              <MyButton onClick={this.resetTimer}>Reset</MyButton>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nexport default Timer;\n","import React, { Component } from \"react\";\nimport Timer from \"./Timer\";\nimport { ActiveHandler } from \"./ActiveHandler\";\n\nclass MainPage extends Component {\n  render() {\n    return (\n      <div className=\"flex flex-col h-screen bg-green-600 justify-center items-center\">\n        <ActiveHandler>\n          <Timer></Timer>\n        </ActiveHandler>\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n","import React from \"react\";\nimport \"./tailwind.generated.css\";\nimport MainPage from \"./components/MainPage\";\n\nclass App extends React.Component {\n  render() {\n    return <MainPage></MainPage>;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}